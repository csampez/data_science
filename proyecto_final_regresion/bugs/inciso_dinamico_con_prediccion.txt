model
{
#Likelihood
for (i in 1:n) {
       #Liga Lineal
      y[i] ~ dnorm(eta[i],tau)
      eta[i]<- alpha[i]+alpha_cdmx[i]*x_cdmx[i]+
  		beta_cyc[i]*x_cyc[i]+beta_cyc_cdmx[i]*x_cyc[i]*x_cdmx[i]+
  		beta_auto[i]*x_auto[i]+beta_auto_cdmx[i]*x_auto[i]*x_cdmx[i]+
  		beta_moto[i]*x_moto[i]+beta_moto_cdmx[i]*x_moto[i]*x_cdmx[i]+
  		beta_cam[i]*x_cam[i]+beta_cam_cdmx[i]*x_cam[i]*x_cdmx[i]}
       
# state equation
for(i in 2:n){
  # alphas 
  alpha[i] ~ dnorm(alpha[i-1],tau.a)
  alpha_cdmx[i] ~ dnorm(alpha_cdmx[i-1],tau.a_cdmx)
  
  beta_cyc[i] ~ dnorm(beta_cyc[i-1],tau.bcyc)
  beta_cyc_cdmx[i] ~ dnorm(beta_cyc_cdmx[i-1],tau.bcyc_cdmx)
  
  beta_auto[i] ~ dnorm(beta_auto[i-1],tau.bauto)
  beta_auto_cdmx[i] ~ dnorm(beta_auto_cdmx[i-1],tau.bauto_cdmx)
  
  beta_moto[i] ~ dnorm(beta_moto[i-1],tau.bmoto)
  beta_moto_cdmx[i] ~ dnorm(beta_moto_cdmx[i-1],tau.bmoto_cdmx)
  
  beta_cam[i] ~ dnorm(beta_cam[i-1],tau.bcam)
  beta_cam_cdmx[i] ~ dnorm(beta_cam_cdmx[i-1],tau.bcam_cdmx)
  
}

#Priors
alpha[1] ~ dnorm(0,0.001)
alpha_cdmx[1] ~ dnorm(0,0.001)

beta_cyc[1] ~ dnorm(0,0.001)
beta_cyc_cdmx[1] ~ dnorm(0,0.001)

beta_auto[1] ~ dnorm(0,0.001)
beta_auto_cdmx[1] ~ dnorm(0,0.001)

beta_moto[1] ~ dnorm(0,0.001)
beta_moto_cdmx[1] ~ dnorm(0,0.001)

beta_cam[1] ~ dnorm(0,0.001)
beta_cam_cdmx[1] ~ dnorm(0,0.001)

tau ~ dgamma(0.001,0.001)

# suavizamiento 
lambda = 30
tau.a = tau*lambda
tau.a_cdmx = tau*lambda
tau.bauto = tau*lambda
tau.bauto_cdmx = tau*lambda
tau.bcyc = tau*lambda
tau.bcyc_cdmx = tau*lambda
tau.bmoto = tau*lambda
tau.bmoto_cdmx = tau*lambda
tau.bcam = tau*lambda
tau.bcam_cdmx = tau*lambda


#Prediction
for (i in 1:n) { yf[i] ~ dnorm(eta[i],tau) }
for (i in 1:m){ 
      yf2[i] ~ dnorm(etaf[i],tau)
      etaf[i]<- alphaf[i]+alpha_cdmxf[i]*xf_cdmx[i]+
  		beta_cycf[i]*xf_cyc[i]+beta_cyc_cdmxf[i]*xf_cyc[i]*xf_cdmx[i]+
  		beta_autof[i]*xf_auto[i]+beta_auto_cdmxf[i]*xf_auto[i]*xf_cdmx[i]+
  		beta_motof[i]*xf_moto[i]+beta_moto_cdmxf[i]*xf_moto[i]*xf_cdmx[i]+
  		beta_camf[i]*xf_cam[i]+beta_cam_cdmxf[i]*xf_cam[i]*xf_cdmx[i]
}
for(i in 2:m){
  # alphas 
  alphaf[i] ~ dnorm(alphaf[i-1],tau.a)
  alpha_cdmxf[i] ~ dnorm(alpha_cdmxf[i-1],tau.a_cdmx)
  
  beta_cycf[i] ~ dnorm(beta_cycf[i-1],tau.bcyc)
  beta_cyc_cdmxf[i] ~ dnorm(beta_cyc_cdmxf[i-1],tau.bcyc_cdmx)
  
  beta_autof[i] ~ dnorm(beta_autof[i-1],tau.bauto)
  beta_auto_cdmxf[i] ~ dnorm(beta_auto_cdmxf[i-1],tau.bauto_cdmx)
  
  beta_motof[i] ~ dnorm(beta_motof[i-1],tau.bmoto)
  beta_moto_cdmxf[i] ~ dnorm(beta_moto_cdmxf[i-1],tau.bmoto_cdmx)
  
  beta_camf[i] ~ dnorm(beta_camf[i-1],tau.bcam)
  beta_cam_cdmxf[i] ~ dnorm(beta_cam_cdmxf[i-1],tau.bcam_cdmx)
  
}
  alphaf[1] ~ dnorm(alpha[n],tau.a)
  alpha_cdmxf[1] ~ dnorm(alpha_cdmx[n],tau.a_cdmx)
  
  beta_cycf[1] ~ dnorm(beta_cyc[n],tau.bcyc)
  beta_cyc_cdmxf[1] ~ dnorm(beta_cyc_cdmx[n],tau.bcyc_cdmx)
  
  beta_autof[1] ~ dnorm(beta_auto[n],tau.bauto)
  beta_auto_cdmxf[1] ~ dnorm(beta_auto_cdmx[n],tau.bauto_cdmx)
  
  beta_motof[1] ~ dnorm(beta_moto[n],tau.bmoto)
  beta_moto_cdmxf[1] ~ dnorm(beta_moto_cdmx[n],tau.bmoto_cdmx)
  
  beta_camf[1] ~ dnorm(beta_cam[n],tau.bcam)
  beta_cam_cdmxf[1] ~ dnorm(beta_cam_cdmx[n],tau.bcam_cdmx)
  
}